{"version":3,"sources":["Card.js","EveryBuddyGame.js","App.js","reportWebVitals.js","index.js"],"names":["Card","cardId","id","game","shown","setShown","selectedCount","setSelectedCount","selectedIndexes","setSelectedIndexes","topOfDeck","flippedIndexes","setFlippedIndexes","setTopOfDeck","useState","selected","setSelect","flipped","setFlip","useSpring","opacity","transform","config","mass","tension","friction","useEffect","indexOf","setTimeout","state","flip","sii","console","log","onClick","newIndexes","filter","i","push","div","className","style","interpolate","o","t","substr","EveryBuddyGame","options","highScore","setOptions","setHighScore","setGame","score","setScore","cardIds","newGame","c","shuffledGame","sort","Math","random","slice","length","x","map","card","index","App","prevOptions","src","class","jsx","global","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56af46c4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSpring, animated as a } from \"react-spring\";\n\nfunction imgName(cardId) {\n    return \"cards/front%20\"+(\"00\"+cardId).substr(-2,2)+\".png\"\n}\n\nfunction Card({\n    id,\n    game,\n    shown,\n    setShown,\n    selectedCount,\n    setSelectedCount,\n    selectedIndexes,\n    setSelectedIndexes,\n    flippedIndexes,\n    setFlippedIndexes,\n    topOfDeck,\n    setTopOfDeck,\n}) {\n    const [selected, setSelect] = useState(false)\n    const [flipped, setFlip] = useState(false)\n    const {transform, opacity} = useSpring({\n        opacity: flipped ? 0 : 1,\n        transform: `perspective(600px) rotateX(${flipped ? 0 : 180}deg) scale(${selected ? 1.2 : 1}) `,\n        config: {mass: 5, tension: 500, friction: 80},\n    })\n\n    useEffect(() => {\n        if (selectedIndexes[3] === true && selectedIndexes.indexOf(id) > -1) {\n            setTimeout(() => {\n                setSelect(state => false)\n                setSelectedCount(0)\n                setSelectedIndexes([])\n            }, 1000)\n        } else if (selectedIndexes[3] === false && selectedIndexes.indexOf(id) > -1) {\n            setFlip(flip => true)\n            setSelectedCount(0)\n            setSelectedIndexes([])\n            setTimeout(() => {\n                if (topOfDeck < 63) {\n                    let sii = selectedIndexes.indexOf(id)\n                    console.log(`TOD @ ${sii}: ` + topOfDeck)\n                    shown[id].cardId = game[topOfDeck+sii].cardId\n                    setShown(shown)\n                    if (sii === 0) {\n                        setTopOfDeck(topOfDeck + 3)\n                    }\n                    setFlip(flip => false)\n                    setSelect(state => false)\n                } else {\n                    setSelect(state => false)\n                }\n            }, 1000)\n        }\n    }, [selectedIndexes])\n    \n    const onCardClick = () => {\n        console.log(\"onCardClick \" + selectedCount + \": \" + selectedIndexes);\n        if (!flipped && selectedCount < 3) {\n            if (!selected) {\n                setSelect(state => true)\n                setSelectedCount(selectedCount + 1)\n                const newIndexes = [...selectedIndexes]\n                newIndexes.push(id)\n                setSelectedIndexes(newIndexes)\n            } else {\n                let idx = selectedIndexes.indexOf(id)\n                setSelect(state => false)\n                setSelectedCount(selectedCount - 1)\n                const newIndexes = selectedIndexes.filter(i => i !== id)\n                setSelectedIndexes(newIndexes)\n            }\n        }\n    }\n\n  return (\n    <div onClick={onCardClick}>\n      <a.div\n        className=\"c back\"\n        style={{\n          opacity: opacity.interpolate(o => 1 - o),\n          transform,\n        }}\n      />\n      <a.div\n        className=\"c front\"\n        style={{\n            opacity,\n            transform: transform.interpolate(t => `${t} rotateX(180deg)`),\n            \"backgroundImage\": \"url(\" + imgName(shown[id].cardId, true) + \")\",\n        }}\n          />\n    </div>\n  )\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card.js\";\n\nfunction EveryBuddyGame({options, setOptions, highScore, setHighScore}) {\n    const [game, setGame] = useState([])\n    const [selectedCount, setSelectedCount] = useState(0)\n    const [selectedIndexes, setSelectedIndexes] = useState([])\n    const [shown, setShown] = useState([])\n    const [topOfDeck, setTopOfDeck] = useState(0)\n    const [score, setScore] = useState(0)\n    \n    let cardIds = [];\n    for (let i = 1; i <= 63; i++) {\n        cardIds.push(i);\n    }\n\n    useEffect(() => {\n        const newGame = []\n        for (let i = 1; i < 64; i++) {\n            const c = {\n                cardId: i,\n                selected: false,\n            }\n            newGame.push(c)\n        }\n\n        const shuffledGame = newGame.sort(() => Math.random() - 0.5)\n        setGame(shuffledGame)\n        setShown(shuffledGame.slice(0, 5*options))\n        setTopOfDeck(5*options)\n  }, [])\n\n  useEffect(() => {\n      if (score > highScore) {\n          setHighScore(score)\n      }\n  }, [game])\n\n    if (selectedIndexes.length === 3) {\n        const match = ((shown[selectedIndexes[0]].cardId ^ shown[selectedIndexes[1]].cardId ^ shown[selectedIndexes[2]].cardId) === 0)\n        \n        if (match) {\n            setScore(x => x + 1)\n            const newGame = [...game]\n            //newGame[selectedIndexes[0]].selected = true\n            //newGame[selectedIndexes[1]].selected = true\n            setGame(newGame)\n\n            const newIndexes = [...selectedIndexes]\n            newIndexes.push(false)\n            setSelectedIndexes(newIndexes)\n        } else {\n            const newIndexes = [...selectedIndexes]\n            newIndexes.push(true)\n            setSelectedIndexes(newIndexes)\n        }\n    }\n\n  if (game.length === 0) return <div>loading...</div>\n  else {\n    return (\n            <div id=\"game\">\n              <h1>Score: {score}</h1>\n            <div id=\"cards\">\n              {shown.map((card, index) => (\n                      <div className=\"card\" key={index}>\n                      <Card\n                  id={index}\n                  cardId={card.cardId}\n                  game={game}\n                  shown={shown}\n                  setShown={setShown}\n                  selectedCount={selectedCount}\n                  setSelectedCount={setSelectedCount}\n                  selectedIndexes={selectedIndexes}\n                  setSelectedIndexes={setSelectedIndexes}\n                  topOfDeck={topOfDeck}\n                  setTopOfDeck={setTopOfDeck}\n                      />\n                      </div>\n              ))}\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default EveryBuddyGame;\n","import React, { useState, useEffect } from \"react\";\nimport EveryBuddyGame from \"./EveryBuddyGame\";\n\nfunction App() {\n  const [options, setOptions] = useState(null)\n  const [highScore, setHighScore] = useState(0)\n\n  useEffect(() => {\n    // Loads when the game starts\n  }, [])\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1>EveryBuddy</h1>\n        <div>High Score: {highScore}</div>\n        <div>\n          {options === null ? (\n            <>\n              <button onClick={() => setOptions(5)}>Easy</button>\n              <button onClick={() => setOptions(4)}>Medium</button>\n              <button onClick={() => setOptions(3)}>Hard</button>\n            </>\n          ) : (\n            <>\n              <button\n                onClick={() => {\n                  const prevOptions = options\n                  setOptions(null)\n                  setTimeout(() => {\n                    setOptions(prevOptions)\n                  }, 5)\n                }}\n              >\n                Start Over\n              </button>\n              <button onClick={() => setOptions(null)}>Main Menu</button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {options ? (\n        <EveryBuddyGame\n          options={options}\n          setOptions={setOptions}\n          highScore={highScore}\n          setHighScore={setHighScore}\n        />\n      ) : (\n          <div>\n              <h2>Choose a difficulty to begin!</h2>\n              <img src=\"cards/instructions.png\" class=\"instructions\"/>\n          </div>\n      )}\n          <style jsx global>\n  {`\n    body {\n      text-align: center;\n      font-family: -apple-system, sans-serif;\n    }\n    .container {\n      width: 1060px;\n      margin: 0 auto;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n    }\n    button {\n      background: #00ad9f;\n      border-radius: 4px;\n      font-weight: 700;\n      color: #fff;\n      border: none;\n      padding: 7px 15px;\n      margin-left: 8px;\n      cursor: pointer;\n    }\n    button:hover {\n      background: #008378;\n    }\n    button:focus {\n      outline: 0;\n    }\n    .instructions {\n      width: 1000px;\n      height: 1400px;\n      border-radius: 100px;\n      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    }\n    #cards {\n      width: ${175+195*(options-1)}px;\n      margin: 0 auto;\n      display: flex;\n      flex-wrap: wrap;\n    }\n    .card {\n      width: 175px;\n      height: 125px;\n      margin-bottom: 20px;\n    }\n    .card:not(:nth-child(${options}n)) {\n      margin-right: 20px;\n    }\n\n    .c {\n      position: absolute;\n      max-width: 175px;\n      max-height: 125px;\n      width: 50ch;\n      height: 50ch;\n      cursor: pointer;\n      border-radius: 12px;\n      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n      will-change: transform, opacity;\n    }\n\n    .front,\n    .back {\n      background-size: cover;\n    }\n\n    .back {\n      background-image: url(cards/back.png);\n    }\n\n    .front {\n      background-color: white;\n    }\n  `}\n      </style>\n          </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}